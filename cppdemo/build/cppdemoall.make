# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug_win32
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
INCLUDES += -I../../include
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS += -lchartdir70
LDDEPS +=
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
include config.gcc

define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
	@echo Running postbuild commands
	IF EXIST ..\background\*.png\ (xcopy /Q /E /Y /I ..\background\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\background\*.png ..\bin > nul)
	IF EXIST ..\customsymbolline\*.png\ (xcopy /Q /E /Y /I ..\customsymbolline\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\customsymbolline\*.png ..\bin > nul)
	IF EXIST ..\enhancedarea\*.png\ (xcopy /Q /E /Y /I ..\enhancedarea\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\enhancedarea\*.png ..\bin > nul)
	IF EXIST ..\errline\*.png\ (xcopy /Q /E /Y /I ..\errline\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\errline\*.png ..\bin > nul)
	IF EXIST ..\fontpie\*.png\ (xcopy /Q /E /Y /I ..\fontpie\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\fontpie\*.png ..\bin > nul)
	IF EXIST ..\hboxwhisker\*.png\ (xcopy /Q /E /Y /I ..\hboxwhisker\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\hboxwhisker\*.png ..\bin > nul)
	IF EXIST ..\iconameter\*.png\ (xcopy /Q /E /Y /I ..\iconameter\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\iconameter\*.png ..\bin > nul)
	IF EXIST ..\icondonut\*.png\ (xcopy /Q /E /Y /I ..\icondonut\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\icondonut\*.png ..\bin > nul)
	IF EXIST ..\iconpie\*.png\ (xcopy /Q /E /Y /I ..\iconpie\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\iconpie\*.png ..\bin > nul)
	IF EXIST ..\iconpie2\*.png\ (xcopy /Q /E /Y /I ..\iconpie2\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\iconpie2\*.png ..\bin > nul)
	IF EXIST ..\linecompare\*.png\ (xcopy /Q /E /Y /I ..\linecompare\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\linecompare\*.png ..\bin > nul)
	IF EXIST ..\multistackbar\*.png\ (xcopy /Q /E /Y /I ..\multistackbar\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\multistackbar\*.png ..\bin > nul)
	IF EXIST ..\patternarea\*.png\ (xcopy /Q /E /Y /I ..\patternarea\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\patternarea\*.png ..\bin > nul)
	IF EXIST ..\percentarea\*.png\ (xcopy /Q /E /Y /I ..\percentarea\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\percentarea\*.png ..\bin > nul)
	IF EXIST ..\percentbar\*.png\ (xcopy /Q /E /Y /I ..\percentbar\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\percentbar\*.png ..\bin > nul)
	IF EXIST ..\polararea\*.png\ (xcopy /Q /E /Y /I ..\polararea\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\polararea\*.png ..\bin > nul)
	IF EXIST ..\polarline\*.png\ (xcopy /Q /E /Y /I ..\polarline\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\polarline\*.png ..\bin > nul)
	IF EXIST ..\scattersymbols\*.png\ (xcopy /Q /E /Y /I ..\scattersymbols\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\scattersymbols\*.png ..\bin > nul)
	IF EXIST ..\splineline\*.png\ (xcopy /Q /E /Y /I ..\splineline\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\splineline\*.png ..\bin > nul)
	IF EXIST ..\surfacetexture\*.png\ (xcopy /Q /E /Y /I ..\surfacetexture\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\surfacetexture\*.png ..\bin > nul)
	IF EXIST ..\texturedonut\*.png\ (xcopy /Q /E /Y /I ..\texturedonut\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\texturedonut\*.png ..\bin > nul)
	IF EXIST ..\yzonecolor\*.png\ (xcopy /Q /E /Y /I ..\yzonecolor\*.png ..\bin > nul) ELSE (xcopy /Q /Y /I ..\yzonecolor\*.png ..\bin > nul)
endef

ifeq ($(config),debug_win32)
TARGETDIR = ../bin/gcc/Win32/Debug
TARGET = $(TARGETDIR)/cppdemoall.exe
OBJDIR = obj/gcc/Win32/Debug
DEFINES += -D_WINDOWS -DWIN32 -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_WARNINGS -D_CRT_NONSTDC_NO_DEPRECATE -DDEBUG -D_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -g
ALL_LDFLAGS += $(LDFLAGS) -L../../lib/win32 -L/usr/lib32 -m32

else ifeq ($(config),debug_win64)
TARGETDIR = ../bin/gcc/Win64/Debug
TARGET = $(TARGETDIR)/cppdemoall_x64.exe
OBJDIR = obj/gcc/Win64/Debug
DEFINES += -D_WINDOWS -DWIN32 -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_WARNINGS -D_CRT_NONSTDC_NO_DEPRECATE -DDEBUG -D_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g
ALL_LDFLAGS += $(LDFLAGS) -L../../lib/win64 -L/usr/lib64 -m64

else ifeq ($(config),release_win32)
TARGETDIR = ../bin/gcc/Win32/Release
TARGET = $(TARGETDIR)/cppdemoall.exe
OBJDIR = obj/gcc/Win32/Release
DEFINES += -D_WINDOWS -DWIN32 -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_WARNINGS -D_CRT_NONSTDC_NO_DEPRECATE -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -O2
ALL_LDFLAGS += $(LDFLAGS) -L../../lib/win32 -L/usr/lib32 -m32 -s

else ifeq ($(config),release_win64)
TARGETDIR = bin/Win64/Release
TARGET = $(TARGETDIR)/cppdemoall_x64.exe
OBJDIR = obj/gcc/Win64/Release
DEFINES += -D_WINDOWS -DWIN32 -D_CRT_SECURE_NO_WARNINGS -D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_WARNINGS -D_CRT_NONSTDC_NO_DEPRECATE -DNDEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_LDFLAGS += $(LDFLAGS) -L../../lib/win64 -L/usr/lib64 -m64 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/cppdemo.o
OBJECTS += $(OBJDIR)/cppdemo.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking cppdemoall
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning cppdemoall
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/cppdemo.o: ../cppdemo.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif